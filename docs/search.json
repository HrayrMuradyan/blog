[
  {
    "objectID": "posts/normal-distribution/index.html",
    "href": "posts/normal-distribution/index.html",
    "title": "Understanding Normal Distribution: Intuition and Real-World Insights",
    "section": "",
    "text": "Introduction\nStatistics courses are a common part of university education, attracting students from different majors. However, these courses often present statistical distributions only through definitions and formulas, which can leave students with a limited understanding of their practical significance. This blog focuses on providing a clear and intuitive explanation of the normal distribution, one of the most fundamental statistical distributions. By using relatable examples, engaging plots, and simplified explanations, it explores the “why” and “how” of the normal distribution, highlighting its real-world relevance and applications.\n\n\n\n\n\n\nNote\n\n\n\nThis blog assumes readers already have a foundational understanding of statistics and probability, including familiarity with random variables and probability density functions. While brief explanations are provided, the blog does not go deep into these concepts.\n\n\n\n\nRandom variables\nEach day is full of events that come with some level of uncertainty. For example, how long it will take for your bus to arrive, what score you will get on a math test, or how many goals your favorite soccer team will score in their next game. These outcomes are uncertain and are represented by a random variable. A random variable is a numerical value that describes the result of something random.\nFor example, the time in hours it takes to complete the first homework of the statistics course. The time it takes - let’s call it X - is the random variable that can’t be less than 0 and theoretically can be very large, though it’s unlikely to approach infinity in practice. Different students might complete the homework in different amounts of time, and X captures this variability in a simple, numerical way. \\[\n\\text{For one student: } X_1 = 3.5 \\text{ hours }\n\\]\n\nOr\n\n\\[\n\\text{For another student: } X_2 = 5 \\text{ hours }\n\\]\nIf we collect the completion times of all students and plot them on a graph we would observe how the completion times are distributed (see Figure 1).\n\n\n\n\n\n\nFigure 1: The distribution of homework completion times. The x-axis represents the hours taken to complete the homework, the y-axis shows the number of students who finished within each time frame. The average completion time is 4 hours and is marked by the red vertical dashed line.\n\n\n\nThe x-axis represents the time taken to complete the homework, while the y-axis shows the number of students who completed it within that time frame. This graph is called the distribution of the random variable or in this case, the distribution of the time required to complete the first homework. Depending on the students’ preparation and skill set, the distribution may vary. The Figure 2 shows another two scenarios that are relevant to the university homework completion case.\n\n\n\n\n\n\nFigure 2: The skewed distribution of homework completion times. The first plot is a right-skewed distribution. The second plot is a left-skewed distribution.\n\n\n\nIn the first scenario, most students completed the homework within 2 to 3 hours, while a few submitted it much later than the majority. For the second scenario, it took 3 to 4 hours to complete the homework, while few students managed to complete it in 1 to 2 hours. Professors aim to create homework that is challenging enough for most students without being overly difficult. This naturally results in most students completing the work within a similar range of time, with fewer students finishing either very quickly or very slowly. Thus scenario discussed in Figure 1 is preferred and expected. It suggests a normal distribution, also called a Gaussian distribution, one of the most widely used statistical distributions due to its frequent occurrence in real-world data.\n\n\nWhat are Statistical Distributions?\nA statistical distribution is a key concept in statistics that explains how values are spread across a variable. It represents this spread using a mathematical function or model. Both random variables and their distributions can be categorized as either discrete or continuous. Discrete variables have a finite or countable set of distinct values, while continuous variables can take any value within a given range or interval. The normal distribution is part of the family of continuous distributions.\n\n\nNormal Distribution\nThe random variable X = the time required to complete the statistics homework follows a normal distribution with mean 4 hours and standard deviation of 1 hour. Or: \\[\nN \\sim (\\mu = 4, \\sigma^2=1)\n\\]\nThere are two parameters in the normal distribution - \\(\\mu \\text{ and } \\sigma\\), corresponding to mean and standard deviation respectively. Any combination of the parameters is a new normal distribution. Figure 3 plots different normal distributions.\n\n\n\n\n\n\nFigure 3: Normal distribution with different mean and standard deviation values. There is no exact random variable chosen, the data is generated. X-axis (Variable) can correspond to any random variable.\n\n\n\nAre these shapes similar to the homework time completion distribution plotted above? Let’s look at Figure 4.\n\n\n\n\n\n\nFigure 4: The distribution of homework completion times with normal distribution curve. The orange curve corresponds to the normal distribution curve which is the same as Probability Density Function with mean 4 and standard deviation 1 scaled by a scaling factor (C).\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nIf the data to examine is a bit more noisy, there are more checks to see if the dataset follows a normal distribution or not. For example, QQ-plots, statistical tests like Shapiro-Wilk test or Kolmogorov-Smirnov test.\n\n\nProbability Density Function is a statistical function that describes the likelihood of a continuous random variable taking on a particular value. The PDF of normal distribution has the following form: \\[\nf(x) = \\frac{1}{\\sqrt{2\\pi\\sigma^2}} \\times e^{-\\frac{(x - \\mu)^2}{2\\sigma^2}}\n\\]\nIn other words, if you plug a number in the function f(x), you will get the density at that specific value. This value represents how concentrated or likely the random variable is to take values near that point, but not the actual probability of the variable being exactly that value (since for continuous distributions, the probability of any specific value is zero). A higher density at a point suggests the random variable is more likely to take values near that point, while a lower density indicates it’s less likely. The scaling factor C is used to convert densities to number of students and match the scale of the plot.\n\\[\nC = \\text{Number of students} \\times \\text{Bin width}\n\\]\nNow, when you know that your data follows a normal distribution, lots of opportunities come up:  \n\n  Enable parametric tests: Many statistical tests and models assume normality. If your data is normally distributed, you can apply parametric methods, which tend to offer more power and precision compared to non-parametric methods (e.g. Test if the average time to complete the homework is equal to 4 hours for all the students taking statistics using the sample data).\n  Prediction: Using the Cumulative Distribution Function (CDF) you can find the probability of students finishing their homework in certain range (e.g. X &gt; 6: What is the probability that a student will finish the homework in more than 6 hours).  \n  Other: Normal distributions provide additional advantages, such as more reliable confidence intervals, simpler statistical inference, and the ability to use the central limit theorem even with smaller sample sizes.\n\n\n\nWhat is the reason for normal distribution being so popular?\nNormal distribution commonly appears in real-world scenarios. One of the main reasons is the important statistical theorem called Central Limit Theorem (CLT). It states that, regardless of the original distribution of data, if you repeatedly take random samples from a population and calculate the mean of each sample, the distribution of those sample means will tend to follow a normal distribution as the sample size increases. Sounds a bit complicated, let’s break down based on an example. The outcomes on the die are 1, 2, 3, 4, 5, or 6, and each number has an equal chance of occurring (\\(\\frac{1}{6}\\)), so the distribution is uniform (see Figure 5).\n\n\n\n\n\n\nFigure 5: The probability distribution of rolling a fair 6-sided die.\n\n\n\nNow, you want to calculate the average of several rolls of the die. If you roll the die 5 times and calculate the average of those 5 rolls, you will get a number between 1 and 6. If you repeat the process 100 times (rolling the die 100x5 times), you will get 100 averages rolling the die 5 times for each. These averages will likely vary, but if you plot all 100 averages, you’ll notice something interesting (see Figure 6).\n\n\n\n\n\n\nFigure 6: The sampling distribution of the sample means for rolling a die\n\n\n\nThe distribution of those 100 averages will start to look like a normal distribution, even though the original die rolls themselves were uniformly distributed (not normal). The more samples you take, the closer the distribution of averages will be to a normal distribution. What a nice property! Now, as you have a normal distribution for the average, you can run hypothesis tests, get confidence intervals, calculate probabilities, and so on.\n\n\nConclusion\nThe blog explored the normal distribution from a practical, intuitive standpoint. By examining everyday examples like homework completion times and die rolls, the blog showed how the normal distribution naturally emerges in many real-world situations. The key takeaway is that normal distribution isn’t just a theoretical concept but a tool that helps us understand variability and uncertainty in real-world data.\nFor those struggling to intuitively grasp the normal distribution, remember that it’s simply a way of describing how values spread around a central point. Most values cluster near the mean, with fewer values appearing as you move farther away—just like how most students finish their homework within a certain time frame. Recognizing this pattern in data makes it easier to predict outcomes, perform statistical tests, and make informed decisions.\nSo, what next? To understand normal distributions deeper, it’s important to explore their use cases in prediction, hypothesis testing, and inference. In prediction, normal distributions help estimate the likelihood of future outcomes, such as the probability of a student finishing homework within a certain time frame. For hypothesis testing, the assumption of normality allows us to apply parametric tests, such as the t-test, to assess whether observed data significantly differs from a hypothesized value. Additionally, normal distributions are essential in statistical inference, as they provide the base for constructing confidence intervals and making reliable conclusions about population parameters from sample data.\n\n\nAdditional Readings\nHere are some additional, interesting sources to read and gain better understanding of the material:\n\nLyon, A. (2013). Why are Normal Distributions Normal? The British Journal for the Philosophy of Science, 65(3), 621–649. https://doi.org/10.1093/bjps/axs046\nBryc, W. (1995). Normal distributions. In: The Normal Distribution. Lecture Notes in Statistics, vol 100. Springer, New York, NY. https://doi.org/10.1007/978-1-4612-2560-7_3\n\n\n\nEnd\nThank you for taking the time to read this blog! I hope it has provided you with a clearer understanding of the significance of normal distributions and how they appear in real-world scenarios."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Hrayr Muradyan’s Blog",
    "section": "",
    "text": "Understanding Normal Distribution: Intuition and Real-World Insights\n\n\nWhy focus on learning the concept for the purpose of passing the course when it can be more beneficial to understand how it appears in real-world scenarios?\n\n\n\nstatistics\n\n\nnormal distribution\n\n\ndata science\n\n\n\n\n\n\n\n\n\nJan 17, 2025\n\n\nHrayr Muradyan\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Welcome to my blog! I’m a data scientist, who loves to share his knowledge and talk about cool topics in machine learning, statistics, and math. You can follow me through the links below to stay updated!"
  },
  {
    "objectID": "notebook/generate_plots.html",
    "href": "notebook/generate_plots.html",
    "title": "Blog",
    "section": "",
    "text": "import numpy as np\nimport matplotlib.pyplot as plt\n\nnp.random.seed(42)\n# Parameters for the distribution\nmean_time = 4  \nstd_dev_time = 1  \nnum_students = 700  \n\n# Generate random times following a normal distribution\ncompletion_times = np.random.normal(mean_time, std_dev_time, num_students)\n\n# Ensure no negative times (truncate at 0)\ncompletion_times = np.clip(completion_times, 0, None)\n\nmean_completion_time = round(np.mean(completion_times))\n\n# Plot the distribution\nplt.figure(figsize=(8, 5))\nplt.hist(completion_times, bins=40, color='skyblue', edgecolor='black', alpha=0.7)\nplt.title('Distribution of Homework Completion Times', size=15)\nplt.xlabel('Time to Complete Homework (hours)', size=13)\nplt.ylabel('Number of Students', size=13)\nplt.axvline(mean_completion_time, color='red', linestyle='dashed', linewidth=3, label='Mean')\nplt.annotate(\n    f'Average completion\\ntime: {mean_completion_time} hours',\n    xy=(mean_completion_time, 37),  # Point to the mean line\n    xytext=(mean_completion_time + 2.4, 45),  # Position of the text\n    arrowprops=dict(facecolor='black', arrowstyle='-&gt;', linewidth=3),\n    fontsize=16,\n    weight='bold',\n    color='darkred',\n    ha='center',\n    va='center'\n)\nplt.savefig(\"../img/homework_completion_distribution.png\")\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.stats import skewnorm\n\nnp.random.seed(42)\n# Parameters for the distribution\nnum_students = 700  \n\n# Right-skewed (positive skew) data\nright_skew_param = 10  # Positive value creates right skew\nright_skew_data = skewnorm.rvs(a=right_skew_param, loc=2, scale=1, size=num_students)\n\n# Left-skewed (negative skew) data\nleft_skew_param = -10  # Negative value creates left skew\nleft_skew_data = skewnorm.rvs(a=left_skew_param, loc=4, scale=1, size=num_students)\n\n# Define common x-ticks\nxticks = np.arange(0, 7, 1)\n\n# Create subplots with two rows\nfig, axes = plt.subplots(2, 1, figsize=(15, 8))\n\n# Plot for right-skewed data\naxes[0].hist(right_skew_data, bins=40, color='skyblue', edgecolor='black', alpha=0.7)\naxes[0].set_title('Right Skewed Homework Completion Times', size=22)\naxes[0].set_xlabel('Time to Complete Homework (hours)', size=16)\naxes[0].set_ylabel('Number of Students', size=16)\naxes[0].set_xticks(range(0, 7))\nright_mean = round(np.mean(right_skew_data))\naxes[0].axvline(right_mean, color='red', linestyle='dashed', linewidth=4, label='Mean')\naxes[0].annotate(\n    f'Average completion\\ntime: {right_mean} hours',\n    xy=(right_mean, 37),  # Point to the mean line\n    xytext=(right_mean + 1.8, 45),  # Position of the text\n    arrowprops=dict(facecolor='black', arrowstyle='-&gt;', linewidth=4),\n    fontsize=16,\n    weight='bold',\n    color='darkred',\n    ha='center',\n    va='center'\n)\n\naxes[0].tick_params(axis='x', labelsize=15)\naxes[0].tick_params(axis='y', labelsize=15)\n\n# Plot for left-skewed data\naxes[1].hist(left_skew_data, bins=40, color='lightgreen', edgecolor='black', alpha=0.7)\naxes[1].set_title('Left Skewed Homework Completion Times', size=22)\naxes[1].set_xlabel('Time to Complete Homework (hours)', size=16)\naxes[1].set_ylabel('Number of Students', size=16)\naxes[1].set_xticks(xticks)\nleft_mean = round(np.mean(left_skew_data))\naxes[1].axvline(left_mean, color='red', linestyle='dashed', linewidth=4, label='Mean')\naxes[1].annotate(\n    f'Average completion\\ntime: {left_mean} hours',\n    xy=(left_mean, 37),  # Point to the mean line\n    xytext=(left_mean - 1.8, 45),  # Position of the text\n    arrowprops=dict(facecolor='black', arrowstyle='-&gt;', linewidth=4),\n    fontsize=16,\n    weight='bold',\n    color='darkred',\n    ha='center',\n    va='center'\n)\naxes[1].tick_params(axis='x', labelsize=15)\naxes[1].tick_params(axis='y', labelsize=15)\n\nplt.tight_layout()\nplt.savefig(\"../img/skewed_homework_completion_distribution2.png\")\nplt.show()\n\n\n\n\n\n\n\n\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.stats import norm\n\nnp.random.seed(42)\n# Parameters for the distribution\nmean_time = 4  \nstd_dev_time = 1  \nnum_students = 700  \n\n# Generate random times following a normal distribution\ncompletion_times = np.random.normal(mean_time, std_dev_time, num_students)\n\n# Ensure no negative times (truncate at 0)\ncompletion_times = np.clip(completion_times, 0, None)\n\nmean_completion_time = round(np.mean(completion_times))\n\n# Generate x values for the normal curve\nx = np.linspace(0, 8, 500)  # Values from 0 to 8 for the x-axis\npdf = norm.pdf(x, mean_time, std_dev_time)  # Normal PDF values\n\n# Scale the PDF to match the histogram's scale\nhist_values, bins, _ = plt.hist(completion_times, bins=40, color='skyblue', edgecolor='black', alpha=0.7)\nscale_factor = num_students * (bins[1] - bins[0])  # Scale factor based on bin width and sample size\npdf_scaled = pdf * scale_factor\n\n# Create the single plot\nplt.figure(figsize=(10, 6))\nplt.hist(completion_times, bins=40, color='skyblue', edgecolor='black', alpha=0.7, label='Histogram')\nplt.plot(x, pdf_scaled, color='darkorange', lw=2, label='Normal Curve')\nplt.axvline(mean_completion_time, color='red', linestyle='dashed', linewidth=3, label='Mean')\nplt.annotate(\n    f'Average completion\\ntime: {mean_completion_time} hours',\n    xy=(mean_completion_time, 37),  # Point to the mean line\n    xytext=(mean_completion_time + 2.4, 45),  # Position of the text\n    arrowprops=dict(facecolor='black', arrowstyle='-&gt;', linewidth=3),\n    fontsize=16,\n    weight='bold',\n    color='darkred',\n    ha='center',\n    va='center'\n)\n\n# Add the PDF formula with a background box\npdf_formula = r\"$f(x) = C \\times \\frac{1}{\\sqrt{2\\pi}} \\times e^{-\\frac{(x - 4)^2}{2}}$\"\nplt.annotate(\n    pdf_formula,\n    xy=(6, 30),  # Position for the formula\n    xytext=(1.5, 35),\n    fontsize=18,\n    color='darkorange',\n    weight='bold',\n    ha='center',\n    bbox=dict(boxstyle=\"round,pad=0.4\", edgecolor='black', facecolor='whitesmoke', alpha=0.8)\n)\n\nplt.annotate(\n    f'Probability Density Function',\n    xy=(5.8, 30),\n    xytext=(1.5, 43),\n    fontsize=14,\n    weight='bold',\n    color='darkorange',\n    ha='center',\n    va='center'\n)\n\n# Add labels and title\nplt.title('Distribution of Homework Completion Times with Probability Density Function', size=16)\nplt.xlabel('Time to Complete Homework (hours)', size=14)\nplt.ylabel('Number of Students', size=14)\nplt.tight_layout()\n\n# Save and show the plot\nplt.savefig(\"../img/homework_completion_distribution_with_curve.png\")\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Parameters for the normal distributions\nparams = [\n    {\"mu\": 0, \"sigma\": 1, \"label\": \"μ=0, σ=1\"},\n    {\"mu\": 1, \"sigma\": 0.5, \"label\": \"μ=1, σ=0.5\"},\n    {\"mu\": -2, \"sigma\": 1.5, \"label\": \"μ=-2, σ=1.5\"},\n    {\"mu\": 2, \"sigma\": 1, \"label\": \"μ=2, σ=1\"},\n    {\"mu\": -1, \"sigma\": 0.7, \"label\": \"μ=-1, σ=0.7\"},\n]\n\n# Generate x values\nx = np.linspace(-5, 5, 500)\n\n# Create the plot\nplt.figure(figsize=(10, 6))\n\nfor param in params:\n    y = (1 / (param[\"sigma\"] * np.sqrt(2 * np.pi))) * \\\n        np.exp(-0.5 * ((x - param[\"mu\"]) / param[\"sigma\"])**2)\n    plt.plot(x, y, label=param[\"label\"])\n\n# Add legend and labels\nplt.title(\"Normal Distributions with Different Parameters\", fontsize=16)\nplt.xlabel(\"Variable\", fontsize=14)\nplt.ylabel(\"Probability Density\", fontsize=14)\nplt.legend(fontsize=12)\nplt.grid(alpha=0.4)\nplt.savefig(\"../img/different_normal_distributions.png\")\n# Show the plot\nplt.show()\n\n\n\n\n\n\n\n\n\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the numbers on a dice\nnumbers = np.array([1, 2, 3, 4, 5, 6])\n\n# The probability for each number on a fair die is 1/6\nprobabilities = np.array([1/6] * 6)\n\n# Plotting\nplt.figure(figsize=(6, 4))\nbars = plt.bar(numbers, probabilities, color='skyblue')\nplt.xlabel('Number on the Dice')\nplt.ylabel('Probability')\nplt.title('Probability of Rolling a Dice')\nplt.ylim(0, 0.2)\nplt.xticks(numbers)\n\n# Adding the probability text on top of each bar\nfor bar in bars:\n    height = bar.get_height()\n    plt.text(bar.get_x() + bar.get_width() / 2, height, f'{height:.3f}', ha='center', va='bottom')\n\nplt.savefig(\"../img/dice_probability.png\")\nplt.show()\n\n\n\n\n\n\n\n\n\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.animation as animation\n\n# Parameters\nn_rolls = 5  # Initial number of rolls per sample\nmax_samples = 500  # Maximum number of samples\n\n# Set up the figure and axis\nfig, ax = plt.subplots(figsize=(8, 6))\n\n# Function to update the plot for the animation\ndef update(num):\n    ax.clear()\n    \n    # Increase the number of rolls (sample size) for each iteration\n    samples = np.random.randint(1, 7, size=(num, n_rolls))\n    averages = samples.mean(axis=1)\n    \n    # Plot the histogram of the averages\n    ax.hist(averages, bins=20, color='skyblue', edgecolor='black', alpha=0.8)\n    ax.set_title(f'Histogram of Die Roll Averages (Samples: {num})')\n    ax.set_xlabel('Average of Rolls')\n    ax.set_ylabel('Frequency')\n    ax.set_xlim(1, 6)\n    scale = len(samples) // 100\n    ax.set_ylim(0, 20*(scale+1))\n    ax.axvline(3.5, color='red', linestyle='--', linewidth=2, label=\"Expected Average (3.5)\")\n    # Add text to show the current number of samples\n    ax.text(4.5, 12, f'Samples: {num}', fontsize=12, color='black')\n    ax.legend()\n    \n# Create the animation\nani = animation.FuncAnimation(fig, update, frames=range(1, max_samples + 1), interval=200)\n\n# Save the animation as a GIF\nani.save('../img/clt_die_rolls_increasing_samples.gif', writer='imagemagick')\n\nMovieWriter imagemagick unavailable; using Pillow instead."
  }
]